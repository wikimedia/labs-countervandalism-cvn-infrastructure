global @once:
  setup: |
      ssh cvn-{name}.eqiad.wmflabs
      umask 0002
      #
      ## Prepare directory structure on on NFS
      #
      cd /data/project
      sudo mkdir cvn-common
      sudo chgrp project-cvn cvn-common/
      sudo chmod 2775 cvn-common/
      mkdir cvn-common/backup/ cvn-common/dropbox/

node @each:
  Horizon:
    project: cvn
    source: latest Debian
    flavour: # when in doubt, match previous instance
        [type=web]: 2 cores, 4 GB RAM
        [type=appserver]: 4 cores, 8 GB RAM
    security-groups: # when in doubt, match previous instance
        [type=web]: default, web
        [type=appserver]: default
    floating-ip:
        [type=web]: No
        [type=appserver]: Yes
  # sudo apt-get install ..
  packages:
    - git
    - nano
    - vim
  # Remember:
  # * /data/project is an NFS mount shared between all servers.
  # * /srv is local to the individual server.
  setup: |
      $ ssh cvn-X.cvn.eqiad.wmflabs
      #
      ## Ensure the shared "cvn.cvnservice" user exists. https://phabricator.wikimedia.org/T162945#4030092
      ## The below should return 1 without error.
      #
      sudo -- sudo -u cvn.cvnservice echo 1
      #
      ## Create local directory structure
      #
      cd /srv
      sudo mkdir cvn
      sudo chgrp project-cvn cvn/
      sudo chmod 2775 cvn/
      mkdir cvn/git/ cvn/services/ cvn/log/
      sudo chgrp cvn.cvnservice cvn/services
      #
      ## Add repos
      #
      cd /srv/cvn/git
      git clone https://gerrit.wikimedia.org/r/labs/countervandalism/cvn-infrastructure infrastructure
      git clone https://gerrit.wikimedia.org/r/labs/countervandalism/cvn-clerkbot
      git clone https://gerrit.wikimedia.org/r/labs/countervandalism/stillalive
      #
      ## Configure profile.d
      #
      cd /etc/profile.d/
      sudo ln -s /srv/cvn/git/infrastructure/environment-config/profile-d-umask-cvn.sh umask-cvn.sh
      #
      ## Configure stillalive
      #
      cd /srv/cvn/git/stillalive
      ln -s localSettings-cvn.yaml localSettings.yaml
      #
      ## File permissions
      #
      sudo chown root /srv/cvn/git/infrastructure/crontab-config/*.cron
      sudo chmod 644 /srv/cvn/git/infrastructure/crontab-config/*.cron
      sudo chown root /srv/cvn/git/infrastructure/bin/backup-wmflabs-node
      sudo chown root /srv/cvn/git/infrastructure/bin/cvndb-CVNBot14-publish
      sudo chown root /srv/cvn/git/infrastructure/bin/cvndb-pull

node [type=webserver]:
  - services:
    - www

node [type=appserver]:
  - services:
    - stillalive
    - CVNBot
  - setup: |
      #
      ## Back up data via hourly cron
      #
      sudo ln -s /srv/cvn/git/infrastructure/bin/backup-wmflabs-node /etc/cron.hourly/cvn-backup-data

node cvn-app10:
  - setup: |
      # Add cron
      sudo ln -s /srv/cvn/git/infrastructure/crontab-config/cvndb-CVNBot14-publish.cron /etc/cron.d/cvndb-CVNBot14-publish

node cvn-app12:
  - services:
    - CVNClerkBot

service stillalive:
  - packages:
    - php-cli
    - php-mbstring # used by ulrichsg/getopt-php
  - setup: |
      # Add cron
      sudo ln -s /srv/cvn/git/infrastructure/crontab-config/stillalive.cron /etc/cron.d/stillalive

service www:
  - packages:
    - apache2
    - libapache2-mod-php
    - php-apcu
    - php-cli
    - php-curl
    - php-mysql
    - php-sqlite3
  - setup: |
    #
    ## Add repos
    #
    cd /srv/cvn/git
    git clone https://gerrit.wikimedia.org/r/labs/countervandalism/cvn-api
    #
    ## Create document root
    #
    ln -s /srv/cvn/git/infrastructure/cvn-docroot /srv/cvn/services/www
    ln -s /srv/cvn/git/cvn-api/public_html/api.php /srv/cvn/services/www/api.php
    #
    ## Setup cvn-api
    #
    sudo ln -s /srv/cvn/git/infrastructure/crontab-config/cvndb-pull.cron /etc/cron.d/cvndb-pull
    #
    ## Configure PHP
    #
    sudo ln -s /srv/cvn/git/infrastructure/php-cvn.ini /etc/php/7.4/mods-available/cvn.ini
    sudo ln -s /etc/php/7.4/mods-available/cvn.ini /etc/php/7.4/apache2/conf.d/50-cvn.ini
    #
    ## Configure webserver
    #
    sudo ln -s /srv/cvn/git/infrastructure/apache-config/cvn.conf /etc/apache2/sites-available/cvn.conf
    sudo ln -s /etc/apache2/sites-available/cvn.conf /etc/apache2/sites-enabled/100-cvn.conf
    sudo apachectl graceful

service CVNBot:
  # - Wikimedia Foundation projects require TLS 1.2 which
  #   Mono 4.6 (Debian 9 Stretch default) does not support.
  #   https://github.com/countervandalism/CVNBot/issues/46
  # - Using .NET Framework 4.7.2 requires Mono 5.18+
  #   https://github.com/countervandalism/CVNBot/issues/13
  #
  # The below installs latest Mono (6.12.0) from Mono's apt source for Debian Buster.
  # Upstream doesn't package for Debian Bullseye, but the Buster package should work fine.
  - packages: |
    # https://www.mono-project.com/download/stable/#download-lin-debian
    sudo apt install apt-transport-https dirmngr
    sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    echo "deb https://download.mono-project.com/repo/debian stable-buster main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
    sudo apt-get update
    # Packages we need
    sudo apt-get install -y mono-complete ca-certificates-mono
  - setup: |
    #
    ## Add repos
    #
    cd /srv/cvn/git
    git clone https://gerrit.wikimedia.org/r/labs/countervandalism/CVNBot
    cd /srv/cvn/services
    mkdir cvnbot
    #
    ## Import SSL certificates
    #
    # http://www.mono-project.com/docs/faq/security/
    # https://github.com/duplicati/duplicati/wiki/SSL-TLS-support-in-Mono#generic-debian--ubuntu
    # https://github.com/KSP-CKAN/CKAN/wiki/SSL-certificate-errors#removing-expired-lets-encrypt-certificates
    #
    sudo sed -i 's/^mozilla\/DST_Root_CA_X3.crt$/!mozilla\/DST_Root_CA_X3.crt/' /etc/ca-certificates.conf
    sudo update-ca-certificates
    sudo cert-sync /etc/ssl/certs/ca-certificates.crt
    #
    ## Verify that HTTPS is working correctly.
    ## You should get the HTML for enwiki's main page and not an exception.
    #
    csharp -e 'new System.Net.WebClient ().DownloadString ("https://en.wikipedia.org")' | head

service CVNClerkBot:
  # Browse repo:
  # https://gerrit.wikimedia.org/g/labs/countervandalism/cvn-clerkbot
  - packages:
    - python3
    - mariadb-client
    - mariadb-server
    - python3-mysqldb
    - python3-twisted
  - prepare:
    - database:
      - shell: |
        echo "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('root');" | sudo mysql -u root mysql
        mysql -u root -proot -e 'CREATE DATABASE cvnclerkbot;'
  - backup:
    - database:
      - shell: |
        mysqldump cvnclerkbot -u root -proot --extended-insert=FALSE > ~/mysql_cvnclerkbot.sql
  - restore:
    - database:
      - shell: |
        mysql -u root -proot cvnclerkbot < /srv/cvn/git/infrastructure/mysql_cvnclerkbot.sql
  - setup: |
    #
    ## Add repos
    #
    cd /srv/cvn/git
    git clone https://gerrit.wikimedia.org/r/labs/countervandalism/cvn-clerkbot CVNClerkBot
    #
    ## Configure CVNClerkBot
    #
    cp /srv/cvn/git/infrastructure/clerkbotconfig.py CVNClerkBot/cvnclerkbotconfig.py
    # edit 'password' in CVNClerkBot/cvnclerkbotconfig.py
    #
    # Run the steps of 'prepare.database'
